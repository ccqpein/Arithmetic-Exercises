(defun isUgly (num)
  (let ((n num))
    (cond ((= n -1) (return-from isUgly "yes"))
          ((member n '(1 2 3 5)) (setf n -1))
          ((= (mod num 2) 0) (setf n (/ n 2)))
          ((= (mod num 3) 0) (setf n (/ n 3)))
          ((= (mod num 5) 0) (setf n (/ n 5)))
          (t (return-from isUgly "no")))
    (isUgly n)))
