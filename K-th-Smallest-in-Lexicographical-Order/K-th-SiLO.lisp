(defun find-kth-number (n k)
  (do ((curr 1)
       (k (1- k)))
      ((<= k 0) curr)
    (let ((steps (cal-steps n curr (1+ curr))))
      (if (<= steps k)
          (setf curr (1+ curr)
                k (- k steps))
          (setf curr (* 10 curr)
                k (1- k))))
    ))

(defun cal-steps (n n1 n2)
  (do ((steps 0 (+ steps (- (min (1+ n) n22) n11)))
        (n11 n1 (* 10 n11))
        (n22 n2 (* 10 n22)))
      ((> n11 n) steps)
    ))

(defun main ()
  (print (find-kth-number 13 2)) 
  (print (find-kth-number 100 90))
  (print (find-kth-number 681692778 351251360))
  )
