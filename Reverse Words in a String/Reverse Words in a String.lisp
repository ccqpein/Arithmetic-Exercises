(defun changeStringtoChar (str)
  (let ((charList nil))
    (setf charList (coerce str 'list))
    charList))

(defun judgeChar (char word wordsList)
  (cond ((char/= char #\ ) 
         (push char word))
        ((char= char #\ )
         (progn (push char word) (setf word (reverse word)) (push word wordsList)))))

(defun deleteSpacesBeginning (charList)
  (let ((charList2 charList))
    (loop for i in charList do
         (if (char= i #\ )
             (setf charList2 (cdr charList2))
             (return-from deleteSpacesBeginning charList2)))))

(defun pushCharToList (charList)
  (let ((wordsList)
        (word)
        (charList (deleteSpacesBeginning charList)))
    (dolist (char charList)
      (judgeChar char word wordsList))
    wordsList))
