(defun eval-rpn (str-l)
  (let ((stack '()))
    (dolist (c str-l (pop stack))
      (cond ((string= c "+") (push (+ (pop stack) (pop stack)) stack))
            ((string= c "-") (push (* -1 (- (pop stack) (pop stack))) stack))
            ((string= c "*") (push (* (pop stack) (pop stack)) stack))
            ((string= c "/") (push (truncate-to-zero (/ 1 (/ (pop stack) (pop stack)))) stack))
            (t (push (parse-integer c) stack)))
      (format t "~a~%" stack)
      )))

(defun truncate-to-zero (n)
  (if (>= n 0)
      (floor n)
      (ceiling n)))

(defun main ()
  (assert (= 9 (eval-rpn '("2" "1" "+" "3" "*"))))
  (assert (= 22 (eval-rpn '("10" "6" "9" "3" "+" "-11" "*" "/" "*" "17" "+" "5" "+"))))
  (assert (= 6 (eval-rpn '("4" "13" "5" "/" "+"))))
  )
