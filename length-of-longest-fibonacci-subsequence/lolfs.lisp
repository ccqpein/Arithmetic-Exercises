(defun len-longest-fib-subseq (arr)
  (let ((result 0))
    (loop for i from 0 below (1- (length arr))
          do (loop for j from (1+ i) below (length arr)
                   for aa = (helper (nth i arr) (nth j arr) (subseq arr (1+ j)))
                   if (/= aa 0)
                     if (> (+ aa 2) result)
                       do (incf result (+ 2 aa))))
    result))

(defun helper (a b arr)
  (let ((result 0))
    (loop for ind from 0 below (length arr)
          if (= (nth ind arr) (+ a b))
            do (let ((aa (1+ (helper b (nth ind arr) (cdr arr)))))
                 (if (> aa result) (setf result aa)))
          )
    result))

(defun main ()
  (assert (= 0 (len-longest-fib-subseq '(1 3 5))))
  (assert (= 5 (len-longest-fib-subseq '(1 2 3 4 5 6 7 8))))
  (assert (= 3 (len-longest-fib-subseq '(1 3 7 11 12 14 18)))))
